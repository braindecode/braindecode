# Authors: Lukas Gemein <l.gemein@gmail.com>
#
#
# License: BSD-3

import torch
import numpy as np

from braindecode.models.tcn import TCN
from braindecode.util import set_random_seeds


def test_tcn():
    set_random_seeds(0, False)
    tcn = TCN(
        n_chans=21,
        n_outputs=2,
        n_filters=55,
        n_blocks=5,
        kernel_size=16,
        drop_prob=0.05270154233150525,
    )
    # braindecode models are always in eval mode after initialization
    # original model implementation was not
    tcn.train()
    x = torch.rand(1, 21, 1000, 1)
    out = tcn(x)
    # this is the output of the original model implementation using the same
    # initialization arguments as above
    expected = np.array(
        [[[0.08966666, 0.10449535, -0.00987122, 0.13853422,
           0.09554131, 0.03518675, 0.11298563, 0.08933394,
           0.06549675, 0.08951511, 0.0332514, 0.11308704,
           0.15152676, 0.13457412, 0.06762195, 0.08441096,
           0.03630383, 0.09036221, 0.09294309, 0.18533969,
           0.07038251, 0.14304288, 0.09177545, 0.06629124,
           0.13152805, 0.07363969, 0.05711211, 0.1460264,
           0.08267814, 0.13151555, 0.11381114, 0.06092364,
           0.06085332, 0.09977774, 0.16669255, 0.03521958,
           0.11241694, 0.09958737, 0.10053537, 0.16480444,
           0.13738321, 0.04797791, 0.05574396, 0.106005,
           0.11154599, 0.05947875, 0.07436514, 0.1290584,
           0.09099958, 0.11156057, 0.07110901, 0.11320238,
           0.128326, 0.12840697, 0.13774383, 0.1229765,
           0.06274433, 0.05486614, 0.11645375, 0.12680398,
           0.07877984, 0.09524868, 0.11941686, 0.15725616,
           0.12029627, 0.09156982, 0.10828678, 0.0667082,
           0.07802893, 0.08086363],
          [-0.21968588, -0.25279093, -0.20063475, -0.23660335,
           -0.24155837, -0.26997775, -0.23960349, -0.21155736,
           -0.29355395, -0.2605784, -0.22043142, -0.23774782,
           -0.25176135, -0.28536958, -0.23725703, -0.22425395,
           -0.22180855, -0.24860752, -0.17139918, -0.2806196,
           -0.263795, -0.29336536, -0.21808162, -0.23822829,
           -0.23561233, -0.2508901, -0.26165622, -0.28538752,
           -0.2504981, -0.27660748, -0.26957372, -0.23101443,
           -0.2686819, -0.18668243, -0.25828153, -0.24788454,
           -0.26898783, -0.23969814, -0.21625564, -0.29445347,
           -0.24130437, -0.2480667, -0.25931802, -0.2071552,
           -0.2567922, -0.21870193, -0.27934977, -0.26996666,
           -0.22875476, -0.24800304, -0.23606667, -0.24245545,
           -0.2281994, -0.22343776, -0.22765025, -0.27067697,
           -0.23127154, -0.27538663, -0.24686942, -0.1710397,
           -0.21048054, -0.29584876, -0.28604013, -0.25640652,
           -0.24291816, -0.2892553, -0.23380187, -0.23002678,
           -0.18778712, -0.23077005]]]
    )

    np.testing.assert_allclose(out.detach().numpy(), expected, rtol=5e-2, atol=5e-2)
